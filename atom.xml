<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jason&#39;s blog</title>
  
  <subtitle>xixihaha</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-07-23T08:59:44.915Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Jason Shen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>初步理解webView</title>
    <link href="http://yoursite.com/2018/07/23/webview/"/>
    <id>http://yoursite.com/2018/07/23/webview/</id>
    <published>2018-07-23T08:45:24.000Z</published>
    <updated>2018-07-23T08:59:44.915Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WebView"><a href="#WebView" class="headerlink" title="WebView"></a>WebView</h1><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><pre><code> - 原生app：传统开发方式，用户体验较好，但是需要开发两个版本，成本较高- webApp:可以理解为生存在浏览器里的应用，他的宿主是浏览器而不是操作系统（可以跨平台）- 混合app：介于webApp和nativeApp之间，主要以js+Native两者相互调用为主。虽然交互体验会比不上原生app，但是其最大的特点是可以跨平台开发，快速迭代，大大减少了开发的成本。混合app虽然看上去是个Native App，但是只有一个webView，里面访问的是一个web app。由于这种开发方式被越来越多的人用到，所以webView便日渐凸显其重要地位。简单的来说webView能在移动应用中开辟一个页面，在里面显示html页面，css和js也同样能被解析，所以写一份代码在多个平台上运行的条件就是以webView为基础</code></pre><h1 id="UIWebView与WKWebView"><a href="#UIWebView与WKWebView" class="headerlink" title="UIWebView与WKWebView"></a>UIWebView与WKWebView</h1><p><strong>作用相同，都可以用来加载网页</strong></p><ul><li>WKWebView相对于UIWebView占用手机的内存更低（内存占用是uiwebview的1/4~1/3）</li><li>加载速度更快</li><li>支持更多的h5特性</li><li>拥有高达60FPS滚动刷新率及内置手势</li></ul><h1 id="WKWebView的基本用法"><a href="#WKWebView的基本用法" class="headerlink" title="WKWebView的基本用法"></a>WKWebView的基本用法</h1><p> <strong>一、创建配置类</strong><br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 在创建WKWebView之前，需要先创建配置对象，用于做一些配置</span><br><span class="line">WKWebViewConfiguration*config=[[WKWebViewConfiguration alloc]init];</span><br><span class="line">// 设置偏好设置</span><br><span class="line">config.preferences = [[WKPreferences alloc] init];</span><br><span class="line">// 默认为0</span><br><span class="line">config.preferences.minimumFontSize = 10;</span><br><span class="line">// 默认认为YES</span><br><span class="line">config.preferences.javaScriptEnabled = YES;</span><br><span class="line">// 在iOS上默认为NO，表示不能自动通过窗口打开</span><br><span class="line">config.preferences.javaScriptCanOpenWindowsAutomatically = NO;</span><br></pre></td></tr></table></figure></p><p> <strong>二、创建WKWebView</strong><br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 初始化一个 WKWebView</span><br><span class="line">_wkWebView = [[WKWebView alloc] initWithFrame:self.view.frame configuration:[WKWebViewConfiguration new]];</span><br><span class="line">// 构建一个请求</span><br><span class="line">NSURLRequest *request = [NSURLRequest requestWithURL:[NSURL URLWithString:@&quot;http://www.jd.com&quot;]];</span><br><span class="line">// 加载这个请求</span><br><span class="line">[_wkWebView loadRequest:request];</span><br></pre></td></tr></table></figure></p><p> <strong>三、WKUIDelegate 和 WKNavigationDelegate</strong><br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"> #pragma mark - WKNavigationDelegate</span><br><span class="line">// 页面开始加载时调用</span><br><span class="line">- (void)webView:(WKWebView *)webView didStartProvisionalNavigation:(WKNavigation *)navigation&#123;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">// 当内容开始返回时调用</span><br><span class="line">- (void)webView:(WKWebView *)webView didCommitNavigation:(WKNavigation *)navigation&#123;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">// 页面加载完成之后调用</span><br><span class="line">- (void)webView:(WKWebView *)webView didFinishNavigation:(WKNavigation *)navigation&#123;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">// 页面加载失败时调用</span><br><span class="line">- (void)webView:(WKWebView *)webView didFailProvisionalNavigation:(WKNavigation *)navigation&#123;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">// 接收到服务器跳转请求之后调用</span><br><span class="line">- (void)webView:(WKWebView *)webView didReceiveServerRedirectForProvisionalNavigation:(WKNavigation *)navigation&#123;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">// 在收到响应后，决定是否跳转</span><br><span class="line">- (void)webView:(WKWebView *)webView decidePolicyForNavigationResponse:(WKNavigationResponse *)navigationResponse decisionHandler:(void (^)(WKNavigationResponsePolicy))decisionHandler&#123;</span><br><span class="line"> </span><br><span class="line">    NSLog(@&quot;%@&quot;,navigationResponse.response.URL.absoluteString);</span><br><span class="line">    //允许跳转</span><br><span class="line">    decisionHandler(WKNavigationResponsePolicyAllow);</span><br><span class="line">    //不允许跳转</span><br><span class="line">    //decisionHandler(WKNavigationResponsePolicyCancel);</span><br><span class="line">&#125;</span><br><span class="line">// 在发送请求之前，决定是否跳转</span><br><span class="line">- (void)webView:(WKWebView *)webView decidePolicyForNavigationAction:(WKNavigationAction *)navigationAction decisionHandler:(void (^)(WKNavigationActionPolicy))decisionHandler&#123;</span><br><span class="line"> </span><br><span class="line">     NSLog(@&quot;%@&quot;,navigationAction.request.URL.absoluteString);</span><br><span class="line">    //允许跳转</span><br><span class="line">    decisionHandler(WKNavigationActionPolicyAllow);</span><br><span class="line">    //不允许跳转</span><br><span class="line">    //decisionHandler(WKNavigationActionPolicyCancel);</span><br><span class="line">&#125;</span><br><span class="line">#pragma mark - WKUIDelegate</span><br><span class="line">// 输入框</span><br><span class="line">- (void)webView:(WKWebView *)webView runJavaScriptTextInputPanelWithPrompt:(NSString *)prompt defaultText:(nullable NSString *)defaultText initiatedByFrame:(WKFrameInfo *)frame completionHandler:(void (^)(NSString * __nullable result))completionHandler&#123;</span><br><span class="line">    completionHandler(@&quot;http&quot;);</span><br><span class="line">&#125;</span><br><span class="line">// 确认框</span><br><span class="line">- (void)webView:(WKWebView *)webView runJavaScriptConfirmPanelWithMessage:(NSString *)message initiatedByFrame:(WKFrameInfo *)frame completionHandler:(void (^)(BOOL result))completionHandler&#123;</span><br><span class="line">    completionHandler(YES);</span><br><span class="line">&#125;</span><br><span class="line">// 警告框</span><br><span class="line">- (void)webView:(WKWebView *)webView runJavaScriptAlertPanelWithMessage:(NSString *)message initiatedByFrame:(WKFrameInfo *)frame completionHandler:(void (^)(void))completionHandler&#123;</span><br><span class="line">    NSLog(@&quot;%@&quot;,message);</span><br><span class="line">    completionHandler();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p> <strong>四、js和native交互</strong></p><ul><li>OC –&gt; JS<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">msg</span>)</span>&#123;</span><br><span class="line">    alert(msg)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[self.webView evaluateJavaScript:@&quot;test(&apos;hello&apos;)&quot; completionHandler:^(id _Nullable item, NSError * _Nullable error) &#123;</span><br><span class="line">    NSLog(@&quot;alert&quot;);</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure><ul><li>JS –&gt; OC<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="built_in">window</span>.webkit.messageHandlers.&lt;name&gt;.postMessage(&lt;messageBody&gt;);</span><br><span class="line">eg:</span><br><span class="line">window.webkit.messageHandlers.currentCookies.postMessage(document.cookie);</span><br></pre></td></tr></table></figure></li></ul> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[controller addScriptMessageHandler:self name:@&quot;currentCookies&quot;];</span><br><span class="line"></span><br><span class="line">- (void)userContentController:(WKUserContentController *)userContentController didReceiveScriptMessage:(WKScriptMessage *)message &#123;</span><br><span class="line">    if ([message.name isEqualToString:@&quot;currentCookies&quot;]) &#123;</span><br><span class="line">        NSString *cookiesStr = message.body;</span><br><span class="line">        NSLog(@&quot;当前的cookie为： %@&quot;, cookiesStr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之前的cordova框架，要和native通信都是通过cordova plugin来实现的，</p><ul><li>ts调用cordova plugin提供的API</li><li>cordova根据调用的API来调用对应的native代码</li><li>native接收到传来的请求（方法调用），实现相应的功能后，把相应的结果返回给ts</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;WebView&quot;&gt;&lt;a href=&quot;#WebView&quot; class=&quot;headerlink&quot; title=&quot;WebView&quot;&gt;&lt;/a&gt;WebView&lt;/h1&gt;&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背
      
    
    </summary>
    
    
      <category term="webView" scheme="http://yoursite.com/tags/webView/"/>
    
  </entry>
  
  <entry>
    <title>vsCode 配置</title>
    <link href="http://yoursite.com/2018/07/23/vs-code/"/>
    <id>http://yoursite.com/2018/07/23/vs-code/</id>
    <published>2018-07-23T06:38:57.620Z</published>
    <updated>2018-07-23T08:59:42.677Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常用vsCode配置及插件整理"><a href="#常用vsCode配置及插件整理" class="headerlink" title="常用vsCode配置及插件整理"></a>常用vsCode配置及插件整理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;editor.tabSize&quot;: 2,</span><br><span class="line">    &quot;workbench.iconTheme&quot;: &quot;vscode-icons&quot;,</span><br><span class="line">    &quot;editor.renderIndentGuides&quot;: false,</span><br><span class="line">    &quot;vsicons.projectDetection.disableDetect&quot;: true,</span><br><span class="line">    &quot;window.zoomLevel&quot;: 0,</span><br><span class="line">    &quot;editor.formatOnSave&quot;: true,</span><br><span class="line">    &quot;beautify.language&quot;: &#123;</span><br><span class="line">        &quot;js&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: [</span><br><span class="line">                &quot;javascript&quot;,</span><br><span class="line">                &quot;json&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;filename&quot;: [</span><br><span class="line">                &quot;.jshintrc&quot;,</span><br><span class="line">                &quot;.jsbeautify&quot;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;css&quot;: [</span><br><span class="line">            &quot;css&quot;,</span><br><span class="line">            &quot;scss&quot;,</span><br><span class="line">            &quot;less&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;html&quot;: [</span><br><span class="line">            &quot;htm&quot;,</span><br><span class="line">            &quot;html&quot;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;vsicons.dontShowNewVersionMessage&quot;: true,</span><br><span class="line">    &quot;vetur.format.defaultFormatter.js&quot;: &quot;vscode-typescript&quot;,</span><br><span class="line">    &quot;vetur.format.defaultFormatter.html&quot;: &quot;js-beautify-html&quot;,</span><br><span class="line">    &quot;javascript.format.insertSpaceBeforeFunctionParenthesis&quot;: true,</span><br><span class="line">    &quot;typescript.format.insertSpaceBeforeFunctionParenthesis&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;常用vsCode配置及插件整理&quot;&gt;&lt;a href=&quot;#常用vsCode配置及插件整理&quot; class=&quot;headerlink&quot; title=&quot;常用vsCode配置及插件整理&quot;&gt;&lt;/a&gt;常用vsCode配置及插件整理&lt;/h2&gt;&lt;figure class=&quot;highli
      
    
    </summary>
    
    
      <category term="vsCode" scheme="http://yoursite.com/tags/vsCode/"/>
    
  </entry>
  
</feed>
